/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package examen2p2_josereyes_21941105;

import static java.awt.MouseInfo.getPointerInfo;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author josec
 */
public class Simulacion extends javax.swing.JFrame{

    /**
     * Creates new form Simulacion
     */
    ArrayList<Planeta>planetasPublic;
    ArrayList<Planeta>list;
    ArrayList<Cientificos>cientificos;
    private final DefaultMutableTreeNode root;
    private final DefaultTreeModel modelo;
    
    public Simulacion() {
        planetasPublic=new ArrayList<>();
        list=new ArrayList<>();
        cientificos=new ArrayList<>();
        initComponents();
        this.setLocationRelativeTo(null);
        planetasPublic();
        modelo = (DefaultTreeModel)jt_planetas.getModel();
        root = new DefaultMutableTreeNode("Planetas"); 
        llenarTree();
        llenarComboBox();
        intento();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        planeta_1 = new javax.swing.JMenuItem();
        planeta_2 = new javax.swing.JMenuItem();
        pb_colision = new javax.swing.JProgressBar();
        pb_puntosextras = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_planetas = new javax.swing.JTree();
        jt_planeta1 = new javax.swing.JTextField();
        jt_planeta2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cb_cientificos = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jt_nombre = new javax.swing.JTextField();
        jc_publicos = new javax.swing.JCheckBox();
        jb_addCientifico = new javax.swing.JButton();
        jb_colisionar = new javax.swing.JButton();

        planeta_1.setText("Planeta 1");
        planeta_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planeta_1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(planeta_1);

        planeta_2.setText("Planeta 2");
        planeta_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planeta_2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(planeta_2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pb_colision.setForeground(new java.awt.Color(102, 255, 51));

        pb_puntosextras.setForeground(new java.awt.Color(51, 255, 51));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("planetas");
        jt_planetas.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jt_planetas.setComponentPopupMenu(jPopupMenu1);
        jt_planetas.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jt_planetasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jt_planetas);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Cientificos");

        cb_cientificos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cb_cientificosMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Nombre");

        jc_publicos.setSelected(true);
        jc_publicos.setText("Publicos");
        jc_publicos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jc_publicosItemStateChanged(evt);
            }
        });

        jb_addCientifico.setText("agregar cientifico");
        jb_addCientifico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_addCientificoMouseClicked(evt);
            }
        });

        jb_colisionar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jb_colisionar.setText("Colisionar");
        jb_colisionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_colisionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pb_puntosextras, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pb_colision, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jc_publicos, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jt_planeta1)
                            .addComponent(jt_planeta2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_cientificos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jt_nombre)
                            .addComponent(jb_addCientifico, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                        .addGap(62, 62, 62)
                        .addComponent(jb_colisionar, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pb_colision, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pb_puntosextras, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jt_planeta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(jt_planeta2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jb_colisionar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(cb_cientificos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jb_addCientifico))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jc_publicos)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_addCientificoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_addCientificoMouseClicked
        cientificos.add(new Cientificos(jt_nombre.getText()));
        llenarComboBox();
        jt_nombre.setText("");
        guardar();
    }//GEN-LAST:event_jb_addCientificoMouseClicked

    private void jc_publicosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jc_publicosItemStateChanged
        if(jc_publicos.isSelected()){
            vaciarTree();
            llenarTree();
        }else{
            vaciarTree();
            llenarTree2(cientifico);
        }
        
    }//GEN-LAST:event_jc_publicosItemStateChanged
    
    private void planeta_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planeta_1ActionPerformed
        // TODO add your handling code here:
        jt_planeta1.setText(Planeta);
        jPopupMenu1.setVisible(false);
        
    }//GEN-LAST:event_planeta_1ActionPerformed

    private void planeta_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planeta_2ActionPerformed
        // TODO add your handling code here:
        jt_planeta2.setText(Planeta);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_planeta_2ActionPerformed

    private void jt_planetasValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jt_planetasValueChanged
        // TODO add your handling code here:
        jPopupMenu1.setVisible(true);
        jPopupMenu1.setLocation(getPointerInfo().getLocation());
        String planeta =jt_planetas.getSelectionPath().toString();
        Planeta=planeta.replace("[Planetas, ", "").replace("]","");
    }//GEN-LAST:event_jt_planetasValueChanged

    private void cb_cientificosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cb_cientificosMouseClicked
        // TODO add your handling code here:
        if(cb_cientificos.getSelectedItem()!=null){
            cientifico = search(String.valueOf(cb_cientificos.getSelectedItem()));
            vaciarTree();
        }
        if(jc_publicos.isSelected()){
            vaciarTree();
            llenarTree();
        }else{
            vaciarTree();
            llenarTree2(cientifico);
        }
    }//GEN-LAST:event_cb_cientificosMouseClicked

    private void jb_colisionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_colisionarActionPerformed
        // TODO add your handling code here:
        planeta1=searchPlaneta(jt_planeta1.getText());
        planeta2=searchPlaneta(jt_planeta2.getText());
        double distanciaP =Math.sqrt(Math.pow((planeta1.X-planeta2.X),2)+Math.pow((planeta1.Y-planeta2.Y),2));
        distancia=(int)distanciaP;
        hilo colision=new hilo();
        colision.start();
    }//GEN-LAST:event_jb_colisionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Simulacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_cientificos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_addCientifico;
    private javax.swing.JButton jb_colisionar;
    private javax.swing.JCheckBox jc_publicos;
    private javax.swing.JTextField jt_nombre;
    private javax.swing.JTextField jt_planeta1;
    private javax.swing.JTextField jt_planeta2;
    private javax.swing.JTree jt_planetas;
    private javax.swing.JProgressBar pb_colision;
    private javax.swing.JProgressBar pb_puntosextras;
    private javax.swing.JMenuItem planeta_1;
    private javax.swing.JMenuItem planeta_2;
    // End of variables declaration//GEN-END:variables
    String Planeta="";
    int distancia;
    Planeta planeta1;
    Planeta planeta2;
    Cientificos cientifico;
    public void planetasPublic(){
        planetasPublic.add(new Terrestre(5000,13000,"Mercurio",400,300));
        planetasPublic.add(new Terrestre(100000,15000,"Venus",640,260));
        planetasPublic.add(new Terrestre(140000,17000,"Tierra",760,570));
        planetasPublic.add(new Terrestre(90000,12000,"Marte",360,360));
        planetasPublic.add(new Gaseoso(400000,40000,"Jupiter",340,310));
        planetasPublic.add(new Gaseoso(300000,30000,"Saturno",560,450));
        planetasPublic.add(new Gaseoso(200000,20000,"Urano",670,690));
        planetasPublic.add(new Gaseoso(200000,20000,"Neptuno",840,900));
    }
    public void vaciarTree(){
        root.removeAllChildren();
        modelo.reload();
    }
    public void guardar(){
        try{
            ObjectOutputStream os=new ObjectOutputStream(new FileOutputStream("./cientificos.jc"));
            for(Cientificos c : cientificos)
                os.writeObject(c);
        }catch(Exception e){
            System.out.println(e);
        }
    }
    public void llenarComboBox(){
        cb_cientificos.removeAllItems();
        for(Cientificos c:cientificos){
            cb_cientificos.addItem(c.nombre);
        }
    }
    public void llenarTree(){
        for(Planeta planeta:planetasPublic){
            DefaultMutableTreeNode hijo =new DefaultMutableTreeNode(planeta.nombre);
            root.add(hijo);
        }
        modelo.setRoot(root);
    }
    public void intento(){
        try{
            ObjectInputStream os =new ObjectInputStream(new FileInputStream("./cientificos.jc"));
            Cientificos cientifico2;
            while((cientifico2=(Cientificos)os.readObject())!=null){
                System.out.println(cientifico2.nombre);
                cientificos.add(cientifico2);
            }
        }catch(Exception e){
            System.out.println(e);
        }
    }
    public Cientificos search(String nombre){
         for(Cientificos c: cientificos){
            if(c.nombre.equals(nombre)){
                return c;
            }
        }
        return null;
        
    }
    public void llenarTree2(Cientificos c){
        for(Planeta p:c.planetas){
            DefaultMutableTreeNode hijo=new DefaultMutableTreeNode(p.nombre);
            root.add(hijo);
        }
        modelo.setRoot(root);
    }
    public Planeta searchPlaneta(String nombre){
        for(Planeta p:list){
            if(p.nombre.equals(nombre)){
                return p;
            }
        }
        return null;
    }

    
    
    class hilo extends Thread{
        
        public void run(){
            pb_colision.setVisible(true);
            pb_colision.setMaximum(distancia);
            try{
                for(int i=0;i<distancia;i++){
                    pb_colision.setValue(i);
                    Thread.sleep(5);
                }              
                Planeta planetanuevo=planeta1.colision(planeta2);
                if(planetanuevo!=null){
                    list.add(planetanuevo);
                    search(String.valueOf(cb_cientificos.getSelectedItem())).planetas.add(planetanuevo);
                    guardar();
                }
                puntosextras();
            }catch(InterruptedException e){
                
            }
            
        }
        
    }
    
    double tiempo;
         double energy;
         double energyMax=0;
         
         public void puntosextras(){
             double tiempoSec =tiempo/1000; 
             double velocidad = distancia/tiempoSec;
             energy=(0.5*((planeta1.peso+planeta2.peso)/2)*Math.pow(velocidad,2));
             Random r = new Random();
             double energiaMax = ThreadLocalRandom.current().nextDouble(energy, 2*energy);
             System.out.println("Tiempo = "+tiempoSec+"s");
             System.out.println("Distancia = "+distancia);
             System.out.println("Velocidad = "+velocidad);
             System.out.println("Energía = "+energy);
             System.out.println("Energía Máxima= "+energiaMax);
             
             
         }
}
